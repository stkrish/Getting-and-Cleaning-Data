find.packages("devtools")
install("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library("KernSmooth", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library(datasets)
data(iris)
newlist <- subset(iris, Species == "virginica")
meanres <- mean(newlist$Sepal.Length)
meanres
rowMeans(iris[, 1:4])
colMeans(iris)
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
split(mtcars, mtcars$cyl)
lapply(mtcars, mean)
sapply(mtcars, cyl, mean)
newlist
q1split <- split(iris, iris$Species)
q1split
lapply(q1split, function(x) colmeans(x,[,"Sepal.Length"]))
lapply(q1split, function(iris) colmeans(iris,[,"Sepal.Length"]))
?lapply
apply(iris[, 1], 2, mean)
apply(iris[, 1:1], 2, mean)
?mtcars
split(mtcars, mtcars$cyl)
s <- split(mtcars, mtcars$cyl)
lapply(s,function(x) colmeans(x[,c('4','6','8')]))
lapply(s,function(x) colMeans(x[,c('4','6','8')]))
lapply(s,function(x) colMeans(x[,c(4,6,8)]))
?tapply
lapply(s, mean(mpg))
lapply(s, mean(s$mpg))
lapply(s, mean(mtcars$mpg))
lapply(s, function() mean(mtcars$mpg))
lapply(s, function(mpg) return(mean(mtcars$mpg)))
lapply(mtcars, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
?abs
s <- split(mtcars, mtcars$cyl)
diff <- abs(lapply(s,function(x) return(colMeans(x[,4] - colMeans(x[,8])))))
diff <- abs(lapply(s,function(x) return(colMeans(x[, 4] - colMeans(x[, 8])))))
s <- split(mtcars, mtcars$cyl)
diff <- abs(lapply(s,function(x) return(colMeans(x[1,4] - colMeans(x[1,8])))))
s <- split(mtcars, mtcars$cyl)
diff <- abs(lapply(s,function(x) return(colMeans(x[,c(4)] - colMeans(x[,c(8)])))))
debug(ls)
ls -a
ls -l
ls
?ls
ls(global)
2
end
c = rbind(c(-2, 3), c(3, -4))
q
q
q
QQ
c <- rbind(c(-2, 3), c(3, -4))
stop
q
q
q
q
N
M
N
N
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
source("best.R")
setwd("/Users/sheelakrishnan/Personal/R")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl,destfile="ss06hid.csv",method="curl")
restData <- read.csv("ss06hid.csv")
restData <- read.csv("ss06hid.csv")
agricultureLogical <- (restData$ACR==3 & restData$AGS==6)
agricultureLogical
table(agricultureLogical)
which(agricultureLogical)
install.packages("jpeg")
library(jpeg)
?readJPEG
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",native=TRUE)
?readJPG
q2 <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",native=TRUE)
q2 <- readJPEG(system.file("img", "getdata-jeff.jpg", package="jpeg"), TRUE)
q2 <- readJPEG(system.file("img", "getdata-jeff.jpg", package="jpeg"), native=TRUE)
getwd()
q2 <- readJPEG(system.file("img", "getdata-jeff.jpg", package="jpeg"), native=TRUE)
q2 <- readJPEG(system.file("img", "/Users/sheelakrishnan/Personal/R/getdata-jeff.jpg", package="jpeg"), native=TRUE)
q2 <- readJPEG("/Users/sheelakrishnan/Personal/R/getdata-jeff.jpg", native=TRUE)
q2
q2$30
q2[,30]
q2[1,30]
q2[30,1]
q2[25,30]
q2[0,30]
if(!file.exists("./newdata2")){dir.create("./newdata2")}
fileUrl1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrl2 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl1,destfile="./newdata2/gdpdata.csv",method="curl")
download.file(fileUrl2,destfile="./newdata2/ctrystats.csv",method="curl")
gdp = read.csv("./newdata2/gdpdata.csv");
ctry_stat <- read.csv("./newdata2/ctrystats.csv")
head(reviews,2)
head(gdp,2)
head(ctry_stat,2)
names(gdp)
names(ctry_stat)
gdp$X
matchData = merge(gdp,ctry_stat,by.x=gdp$X,by.y="CountryCode",all=TRUE)
matchData = merge(gdp,ctry_stat,by.x="X",by.y="CountryCode",all=TRUE)
matchData
head(matchData)
new <- head(matchData)
new$X
names(gdp)
gdp$X.2
gdp$X.1
gdp$X.3
gdp$X.4
gdp$X.5
gdp$X.6
gdp$X.7
gdp$X.8
names(gdp)
gdp$X
gdp$X.1
names(gdp)
gdp$Gross.domestic.product.2012
quantile(q2,prob=c(0.3, 0.8))
new_gdp = cut(gdp$X,breaks=quantile(gdp$X))
new_gdp = cut(as.numeric(gdp$X),breaks=quantile(gdp$X))
new_gdp = cut(as.numeric(gdp$Gross.domestic.product.2012,breaks=quantile(gdp$X))
new_gdp
new_gdp = cut(as.numeric(gdp$Gross.domestic.product.2012,breaks=quantile(gdp$X))
1
new_gdp = cut(as.numeric(gdp$Gross.domestic.product.2012),breaks=quantile(gdp$X))
new_gdp = cut(as.numeric(gdp$Gross.domestic.product.2012),breaks=quantile(gdp$Gross.domestic.product.2012))
gdp$Gross.domestic.product.2012
as.Numeric(Gross.domestic.product.2012)
?as.numeric
as.numeric(Gross.domestic.product.2012)
as.numeric(gdp$Gross.domestic.product.2012)
gdp$newgdp = cut(as.numeric(gdp$Gross.domestic.product.2012),breaks=quantile(gdp$Gross.domestic.product.2012))
library(Hmisc)
install.packages(Hmisc)
install.packages("Hmisc")
library(Hmisc)
gdp$newgdp = cut2(gdp$Gross.domestic.product.2012,g=5)
gdp$newgdp = cut2(gdp$Gross.domestic.product.2012,g=4)
gdp$newgdp = cut2(as.numeric(gdp$Gross.domestic.product.2012),g=4)
gdp$newgdp
which(agricultureLogical)
quantile(q2,prob=c(0.3, 0.8))
gdp <- read.csv("./newdata2/gdpdata.csv", stringsAsFactors=FALSE, header=FALSE)
View(gdp)
View(gdp)
names(gdp)
gdp$V1
gdp$V2
ctry_stat <- read.csv("./newdata2/ctrystats.csv", stringsAsFactors=FALSE, header=FALSE)
names(ctry_stat)
ctry_stat$V1
matchData = merge(gdp,ctry_stat,by.x="V1",by.y="V1",all=TRUE)
head(matchData)
matchData = merge(gdp,ctry_stat,by.x=gdp$V1,by.y=ctry_stat$V1,all=TRUE)
matchData = merge(gdp,ctry_stat,by.x="gdp$V1",by.y="ctry_stat$V1",all=TRUE)
matchData2 = merge(gdp,ctry_stat,all=TRUE)
View(matchData2)
View(matchData2)
gdp$V1
nrows(gdp$V1)
nrow(gdp$V1)
ncol(gdp$V1)
gdp$ctmtch = ifelse(gdp$V1 == ctry_stat$V1, TRUE, FALSE)
table(gdp$ctmtch,gdp$V1 == ctry_stat$V1)
file <- "data.zip"
file <- "data.zip"
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
data_path <- "/Users/sheelakrishnan/Personal/R/GACDProject"
result_folder <- "results"
if(!is.element("plyr", installed.packages()[,1])){
print("Installing packages")
install.packages("plyr")
}
library(plyr)
if(!file.exists(file)){
##Downloads the data file
print("downloading Data")
download.file(url,file, mode = "wb")
}
if(!file.exists(file)){
##Downloads the data file
print("downloading Data")
download.file(url,file,method="curl") # mode = "wb")
}
if(!file.exists(result_folder)){
print("Creating result folder")
dir.create(result_folder)
}
getTable <- function (filename,cols = NULL){
print(paste("Getting table:", filename))
f <- unz(file, paste(data_path,filename,sep="/"))
data <- data.frame()
if(is.null(cols)){
data <- read.table(f,sep="",stringsAsFactors=F)
} else {
data <- read.table(f,sep="",stringsAsFactors=F, col.names= cols)
}
data
}
getData <- function(type, features){
print(paste("Getting data", type))
subject_data <- getTable(paste(type,"/","subject_",type,".txt",sep=""),"id")
y_data <- getTable(paste(type,"/","y_",type,".txt",sep=""),"activity")
x_data <- getTable(paste(type,"/","X_",type,".txt",sep=""),features$V2)
return (cbind(subject_data,y_data,x_data))
}
saveResult <- function (data,name){
print(paste("Saving data", name))
file <- paste(result_folder, "/", name,".csv" ,sep="")
write.csv(data,file)
}
features <- getTable("features.txt")
setwd("UCI HAR Dataset/")
data_path <- "/Users/sheelakrishnan/Personal/R/UCI HAR Dataset"
features <- getTable("features.txt")
setwd("/Users/sheelakrishnan/Personal/R/UCI HAR Dataset/")
features<-read.table("features.txt")["V2"]
activity_labels<-read.table("activity_labels.txt")["V2"]
indices_of_means_and_stds<-grep("mean|std",features$V2)
setwd("train")
X_train<-read.table("X_train.txt")
names(X_train)<-features$V2
X_train<-read.table("X_train.txt")
source('~/.active-rstudio-document')
